services:

  vue:
    build:
      context: ./docker/services/vue
      dockerfile: dockerfile-vue
    volumes:
      - './docker/services/vue:/app:cached'
      - 'vue_node_modules:/app/node_modules'
    ports:
      - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
    env_file: ./.env.local
    environment:
      VITE_PORT: '${VITE_PORT:-5173}'
    depends_on:
      python:
        condition: service_healthy
    networks:
      custom_network: null
    restart: unless-stopped

  python:
    build:
      context: ./docker/services/python
      dockerfile: dockerfile-python
    volumes:
      - './docker/services/python:/app:cached'
      - 'py_pip_cache:/root/.cache/pip'
    environment:
      PY_PORT: '${PY_PORT:-8000}'
    ports:
      - '${PY_PORT:-8000}:${PY_PORT:-8000}'
    healthcheck:
      test: ["CMD", "python", "-c", "import os,sys,urllib.request;port=os.environ.get('PY_PORT','8000');resp=urllib.request.urlopen(f'http://127.0.0.1:{port}/health',timeout=2);sys.exit(0 if resp.status==200 else 1)"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s
    networks:
      - custom_network
    restart: unless-stopped

networks:
  custom_network:
    name: docker_network
    driver: bridge

volumes:
  vue_node_modules: null
  py_pip_cache: null
